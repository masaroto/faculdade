#lang racket/base
;; {{trans|C}}
(require data/bit-vector)
 
(define (jaro-winkler str1 str2)
  (define len-str1 (string-length str1))
  (define len-str2 (string-length str2))
  (define str1-m (make-bit-vector len-str1))
  (define str2-m (make-bit-vector len-str2))
  (define expression (open-input-string "123"))
  (for ([c (in-input-port-chars expression)])
    (display c))
  )

(jaro-winkler "a" "a")